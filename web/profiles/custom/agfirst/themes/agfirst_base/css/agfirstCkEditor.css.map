{"version":3,"sources":["partials/_base.scss","modules/_variables.scss","../node_modules/sass-rem/_rem.scss","partials/_typography.scss","modules/_mixins.scss","partials/_buttons.scss"],"names":[],"mappings":"AAIA,EACE,8BAAA,AAAsB,qBAAA,CACvB,KAGC,aCeyB,CDd1B,IAGC,eACA,WACA,YACA,qBACA,iBAAkB,CACnB,MAGC,WACA,yBACA,QAAS,CAHX,YAMI,WAAY,CANhB,SAUI,gBACA,yBACA,cACA,WAAY,CAbhB,SAiBI,gBAEA,wBAAyB,CAC1B,OAID,WAAY,CADd,oBAKM,iBEdsD,CFevD,aAMD,eACA,oEACA,yBACA,cACA,gBACA,aAAc,CACf,EGvDD,cACA,oBACA,mBAAoB,CACrB,KAGC,cACA,qEACA,eAAgB,CACjB,OAIC,oEACA,cFJW,CEKZ,OAIC,oEACA,kBACA,aFayB,CEZ1B,OAIC,qEACA,cFfW,CEgBZ,OAIC,qEACA,kBACA,aFN0B,CEO3B,OAIC,qEACA,iBACA,aFPyB,CEQ1B,OAIC,oEACA,eACA,aFdyB,CEe1B,0CAcC,aACA,kBAAmB,CACpB,EAGC,eACA,YAAa,CAFf,QAKI,iBACF,CANF,QASI,iBACF,CAVF,QAaI,oEACA,kBACA,oBAAqB,CACtB,EAID,mCAAA,AACA,2BAAA,aFvDyB,CEqD3B,QAII,qBACA,aFzDuB,CE0DxB,8LCnCD,iCAAA,AACA,yBAAA,UAOE,gCAAA,AAAwB,uBAAA,CAL1B,0PACE,SAAU,CACX,0PAMG,mCAAA,AAA2B,0BAAA,CAC5B,4EDoCG,wBAAyB,CAR9B,4EAaK,kBAAmB,CAbxB,kFAeO,eAAgB,CACjB,yBASL,YACA,SAAU,CACX,aAGC,YACA,eACA,gBAAiB,CAClB,YAEC,WACA,aAAc,CACf,cAGC,oBAAA,AACA,oBADA,AACA,aAAA,4BAAA,AAAwB,6BAAxB,AAAwB,4BAAxB,AAAwB,uBAAA,CAFzB,gBAKG,iBACA,kBACA,2BAAA,AAAkB,iBAAA,CACnB,QEhJH,qBACA,oEACA,kBACA,gBACA,qBACA,iCAAA,AACA,yBAAA,qBACA,yBACA,mBACA,WACA,eD+CA,yBACA,UAuBE,gCAAA,AAAwB,uBAAA,CArB1B,oBACE,SAAU,CACX,oBAsBG,mCAAA,AAA2B,0BAAA,CAC5B,cCtED,yBACA,UJGoB,CIpBxB,oBAmBM,wBAAoC,CAnB1C,cAwBI,yBACA,UJLoB,CIpBxB,oBA2BM,wBAA2C,CA3BjD,oBAgCI,6BACA,qBJboB,CIpBxB,0BAoCM,cACA,oBJHqB,CIlC3B,gCAwCQ,WACA,oBAAgC,CAzCxC,0BA8CM,cACA,oBJnBsB,CI5B5B,gCAkDQ,WACA,oBAAuC,CACxC","file":"agfirstCkEditor.css","sourcesContent":["/*=============================================\n  Base Styles\n=============================================*/\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  color: $defaultTextColor;\n}\n\nimg {\n  max-width: 100%;\n  width: auto;\n  height: auto;\n  display: inline-block;\n  margin-bottom: 1em;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  border: 0;\n\n  tbody {\n    border: none;\n  }\n\n  th {\n    text-align: left;\n    text-transform: uppercase;\n    padding: 0 1em;\n    border: none;\n  }\n\n  td {\n    padding: .833rem;\n    // border-color: #bdbdbd;\n    border: 1px solid #bdbdbd;\n  }\n}\n\nfigure {\n  margin: 1rem;\n\n  figcaption {\n    p {\n      font-size: rem(14px);\n    }\n  }\n}\n\nblockquote {\n  p {\n    font-size: $h3;\n    font-family: $futura;\n    text-transform: uppercase;\n    color: $green-dark;\n    font-weight: 700;\n    margin: 0 auto;\n  }\n}\n","/* ==========================================================================\n\tVariables\n========================================================================== */\n\n// units\n$siteWrapper: 87.500em; // 1400px\n\n// Fonts\n$sans-serif: \"futura-pt\", Arial, \"Helvetica Neue\", Helvetica, sans-serif;\n$serif: Georgia, Times, \"Times New Roman\", serif;\n\n$futura: \"futura-pt\", Arial, \"Helvetica Neue\", Helvetica, sans-serif;\n$myriad: \"myriad-pro\", Arial, \"Helvetica Neue\", Helvetica, sans-serif;\n\n// Heading Font Sizes\n$h1-mma: 5rem;      // 80px\n$h1:     4rem;      // 65px\n$h2:     2.25rem;   // 36px\n$h3:     2rem;      // 32px\n$h4:     1.75rem;   // 28px\n$h5:     1.5rem;    // 24px\n$h6:     1rem;      // 16px\n\n// Neutral Colors\n$black:             #2B241E;\n$white:             #fff;\n\n$grey: #979797;\n\n// Greys\n$brown-extra-light:  #FAF6F1;\n$brown-light:        #FAEFDD;\n$brown:              #EACFA0;\n$brown-dark:         #956123;\n$brown-extra-dark:   #3C3322;\n\n// Greens\n$green-extra-light: #F3F7ED;\n$green-light:       #DBE8C2;\n$green:             #5b8f22;\n$green-dark:        #335C22;\n$green-extra-dark:  #2C4009;\n\n// Blues\n$blue-extra-light:  #E2ECF2;\n$blue-light:        #AFC1CE;\n$blue:              #527690;\n$blue-dark:         #16476B;\n$blue-extra-dark:   #003359;\n\n\n// Color Assignments\n$defaultTextColor: $black;\n$link-color:       $green;\n\n// Media Query Breakpoints\n$xsmall:      20em;  // 320px\n$small:       30em;  // 480px\n$medium:      48em;  // 768px\n$large:       64em;  // 1024px\n$xlarge:      80em;  // 1280px\n$xxlarge:     90em;  // 1440px\n","$rem-baseline: 16px !default;\n$rem-fallback: false !default;\n$rem-px-only: false !default;\n\n@function rem-separator($list, $separator: false) {\n  @if $separator == \"comma\" or $separator == \"space\" {\n    @return append($list, null, $separator);\n  } \n  \n  @if function-exists(\"list-separator\") == true {\n    @return list-separator($list);\n  }\n\n  // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)\n  $test-list: ();\n  @each $item in $list {\n    $test-list: append($test-list, $item, space);\n  }\n\n  @return if($test-list == $list, space, comma);\n}\n\n@mixin rem-baseline($zoom: 100%) {\n  font-size: $zoom / 16px * $rem-baseline;\n}\n\n@function rem-convert($to, $values...) {\n  $result: ();\n  $separator: rem-separator($values);\n  \n  @each $value in $values {\n    @if type-of($value) == \"number\" and unit($value) == \"rem\" and $to == \"px\" {\n      $result: append($result, $value / 1rem * $rem-baseline, $separator);\n    } @else if type-of($value) == \"number\" and unit($value) == \"px\" and $to == \"rem\" {\n      $result: append($result, $value / $rem-baseline * 1rem, $separator);\n    } @else if type-of($value) == \"list\" {\n      $value-separator: rem-separator($value);\n      $value: rem-convert($to, $value...);\n      $value: rem-separator($value, $value-separator);\n      $result: append($result, $value, $separator);\n    } @else {\n      $result: append($result, $value, $separator);\n    }\n  }\n\n  @return if(length($result) == 1, nth($result, 1), $result);\n}\n\n@function rem($values...) {\n  @if $rem-px-only {\n    @return rem-convert(px, $values...);\n  } @else {\n    @return rem-convert(rem, $values...);\n  }\n}\n\n@mixin rem($properties, $values...) {\n  @if type-of($properties) == \"map\" {\n    @each $property in map-keys($properties) {\n      @include rem($property, map-get($properties, $property));\n    }\n  } @else {\n    @each $property in $properties {\n      @if $rem-fallback or $rem-px-only {\n        #{$property}: rem-convert(px, $values...);\n      }\n      @if not $rem-px-only {\n        #{$property}: rem-convert(rem, $values...);\n      }\n    }\n  }\n}\n","/* ==========================================================================\n\tTypography\n========================================================================== */\n\n// https://www.smashingmagazine.com/2016/11/css-inheritance-cascade-global-scope-new-old-worst-best-friends/\n* {\n  color: inherit;\n  line-height: inherit;\n  font-family: inherit;\n}\n\nhtml {\n  color: $defaultTextColor;\n  font-family: $myriad;\n  line-height: 1.4;\n}\n\nh1,\n.h1 {\n  font-family: $futura;\n  font-size: $h1;\n}\n\nh2,\n.h2 {\n  font-family: $futura;\n  font-size: $h2;\n  color: $green-dark;\n}\n\nh3,\n.h3 {\n  font-family: $myriad;\n  font-size: $h3;\n}\n\nh4,\n.h4 {\n  font-family: $myriad;\n  font-size: $h4;\n  color: $brown-extra-dark;\n}\n\nh5,\n.h5 {\n  font-family: $myriad;\n  font-size: $h5;\n  color: $green-dark;\n}\n\nh6,\n.h6 {\n  font-family: $futura;\n  font-size: $h6;\n  color: $green-dark;\n}\n\nh1,\n.h1,\nh2,\n.h2,\nh3,\n.h3,\nh4,\n.h4,\nh5,\n.h5,\nh6,\n.h6 {\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\np {\n  font-size: 1rem;\n  margin-top: 0;\n\n  &.small {\n    font-size: .875rem\n  }\n\n  &.large {\n    font-size: 1.25rem\n  }\n\n  &.intro {\n    font-family: $futura;\n    font-size: rem(20px);\n    margin: 0 auto 2.5rem;\n  }\n}\n\na {\n  transition: color .25s ease;\n  color: $green;\n  &:hover {\n    text-decoration: none;\n    color: $green-dark;\n  }\n}\n\n// wysiwyg\n.region {\n  &--content {\n    .field--name-body {\n      h2, h3, h4, h5, h6 {\n        // color: $green-dark;\n        @include fout(vertical);\n      }\n\n      h2, h6 {\n        text-transform: uppercase;\n      }\n\n      ul,\n      ol {\n        padding: 0 0 0 1rem;\n        li {\n          padding: .5rem 0;\n        }\n      }\n    }\n  }\n}\n\n.align {\n  &-right,\n  &-left {\n    margin: 1rem;\n    width: 50%;\n  }\n\n  &-right {\n    float: right;\n    margin-right: 0;\n    text-align: right;\n  }\n  &-left {\n    float: left;\n    margin-left: 0;\n  }\n\n  &-center {\n    display: flex;\n    flex-flow: column nowrap;\n\n    * {\n      margin-left: auto;\n      margin-right: auto;\n      align-self: center;\n    }\n  }\n}\n","/* ==========================================================================\n\tMixins\n========================================================================== */\n@import \"sass-rem/rem\";\n\n// Media Queries\n//   Usage:\n//   @include breakpoint($large) { };\n//   @include breakpoint(400px, min-height) { };\n$media-feature: 'min-width' !default;\n@mixin breakpoint($point, $feature: $media-feature) {\n    @media (#{$feature}: $point) {\n        @content;\n    }\n}\n@mixin bp($point, $feature: $media-feature) {\n    @media (#{$feature}: $point) {\n        @content;\n    }\n}\n\n// https://github.com/sass/sass/issues/533\n@function strip-units($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n@function fluid($size) {\n  $size: strip-units($size);\n  $fluid-value: ($size / 1024) * 100vw;\n  @return $fluid-value;\n}\n\n// Contain Floats\n@mixin clearfix {\n\t&:after { content: \"\"; display: table; clear: both; }\n}\n\n// Placeholder styling\n@mixin placeholder {\n    $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\n    @each $placeholder in $placeholders {\n        &:#{$placeholder}-placeholder {\n            @content;\n        }\n    }\n    &.placeholder {\n        @content;\n    }\n}\n\n// Font Smoothing - Mac OS X only\n@mixin font-smoothing($value: on) {\n    @if $value == on {\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n    @else {\n        -webkit-font-smoothing: subpixel-antialiased;\n        -moz-osx-font-smoothing: auto;\n    }\n}\n\n@mixin fout($transitionAxis: none) {\n  transition: all .25s ease;\n  opacity: 1;\n\n  .wf-loading & {\n    opacity: 0;\n  }\n\n  @if $transitionAxis == vertical {\n    transform: translateY(0);\n\n    .wf-loading & {\n      transform: translateY(1rem);\n    }\n  }\n\n  @if $transitionAxis == vertical-reverse {\n    transform: translateY(0);\n\n    .wf-loading & {\n      transform: translateY(-1rem);\n    }\n  }\n\n  @if $transitionAxis == horizontal {\n    transform: translateX(0);\n\n    .wf-loading & {\n      transform: translateX(1rem);\n    }\n  }\n\n  @if $transitionAxis == horizontal-reverse {\n    transform: translateX(0);\n\n    .wf-loading & {\n      transform: translateX(-1rem);\n    }\n  }\n}\n\n\n// plus minus\n// https://loune.net/2017/05/simple-plus-to-minus-icon-transition-animation-in-css/\n@mixin plusMinus($width, $lineWidth, $color) {\n  box-sizing: border-box;\n  transition: transform 0.3s;\n  width: $width;\n  height: $width;\n  transform: rotate(180deg);\n  position: relative;\n\n  &.is-active {\n    transform: rotate(0deg);\n  }\n  &::before {\n    content: '';\n    display: block;\n    width: $width;\n    height: 0px;\n    border-bottom: solid $lineWidth $color;\n    position: absolute;\n    bottom: $width/2 - $lineWidth/2;\n    transform: rotate(90deg);\n    transition: width 0.3s;\n  }\n  &.is-active::before {\n    content: '';\n    display: block;\n    width: 0px;\n    height:0px;\n    border-bottom: solid $lineWidth $color;\n    position: absolute;\n    bottom: $width/2 - $lineWidth/2;\n    transform: rotate(90deg);\n  }\n  &::after {\n    content: '';\n    display: block;\n    width: $width;\n    height:0px;\n    border-bottom: solid $lineWidth $color;\n    position: absolute;\n    bottom: $width/2 - $lineWidth/2;\n  }\n}\n\n\n\n//                                     ,,                                          ,,               ,,\n//                                   `7MM                                          db               db\n//                                     MM\n// `7M'   `MF'.gP\"Ya `7MMpMMMb.   ,M\"\"bMM  ,pW\"Wq.`7Mb,od8     `7MMpMMMb.pMMMb.  `7MM  `7M'   `MF'`7MM  `7MMpMMMb.  ,pP\"Ybd\n//   VA   ,V ,M'   Yb  MM    MM ,AP    MM 6W'   `Wb MM' \"'       MM    MM    MM    MM    `VA ,V'    MM    MM    MM  8I   `\"\n//    VA ,V  8M\"\"\"\"\"\"  MM    MM 8MI    MM 8M     M8 MM           MM    MM    MM    MM      XMX      MM    MM    MM  `YMMMa.\n//     VVV   YM.    ,  MM    MM `Mb    MM YA.   ,A9 MM           MM    MM    MM    MM    ,V' VA.    MM    MM    MM  L.   I8\n//      W     `Mbmmd'.JMML  JMML.`Wbmd\"MML.`Ybmd9'.JMML.       .JMML  JMML  JMML..JMML..AM.   .MA..JMML..JMML  JMML.M9mmmP'\n\n// center vertically and/or horizontally an absolute positioned element\n@mixin center($xy:xy) {\n  @if $xy == xy {\n    left: 50%;\n    top: 50%;\n    bottom: auto;\n    right: auto;\n    @include transform(translateX(-50%) translateY(-50%));\n  }\n  @else if $xy == x {\n    left: 50%;\n    right: auto;\n    @include transform(translateX(-50%));\n  }\n  @else if $xy == y {\n    top: 50%;\n    bottom: auto;\n    @include transform(translateY(-50%));\n  }\n}\n","\n/*=============================================\n  Buttons\n=============================================*/\n\n.button {\n  display: inline-block;\n  font-family: $futura;\n  font-size: rem(14px);\n  font-weight: 900;\n  padding: .875rem 2rem;\n  transition: all .25s ease;\n  text-decoration: none;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  color: $white;\n  cursor: pointer;\n\n  @include fout(horizontal);\n\n  &.green {\n    background-color: $green;\n    color: $white;\n    &:hover {\n      background-color: darken($green, 5%);\n    }\n  }\n\n  &.brown {\n    background-color: $brown-dark;\n    color: $white;\n    &:hover {\n      background-color: lighten($brown-dark, 10%);\n    }\n  }\n\n  &.transparent {\n    background-color: transparent;\n    border: 2px solid $white;\n\n    &.green {\n      color: $green;\n      border-color: $green;\n      &:hover {\n        // color: darken($green, 5%);\n        color: $white;\n        border-color: darken($green, 5%);\n      }\n    }\n\n    &.brown {\n      color: $brown-dark;\n      border-color: $brown-dark;\n      &:hover {\n        // color: lighten($brown-dark, 10%);\n        color: $white;\n        border-color: lighten($brown-dark, 10%);\n      }\n    }\n  }\n}\n"]}